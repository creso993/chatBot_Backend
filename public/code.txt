  constructor(props){
        super(props);
        this.pageClick = this.pageClick.bind(this);
        this.uporDown = this.uporDown.bind(this);
        this.state ={cards:[],
        currentPage:1,
        perPage:6,
        fullcard:[],
        keyword:"",
        search: false
        };
        
    }
    pageClick(e){
        this.setState({
            currentPage:Number(e.target.id)
        });
    }
uporDown(up){
        const   {cards,currentPage,perPage} = this.state;
        if(up && this.state.currentPage < Math.ceil(cards.length/perPage)){
            this.setState({
                currentPage:this.state.currentPage+1
            })
        }
        else if(!up && this.state.currentPage > 1 ){
            this.setState({
                currentPage:this.state.currentPage-1
            })
        }
    }


render(){
        const   {cards,currentPage,perPage} = this.state;
        const indexLast = currentPage *perPage;
        const indexFirst = indexLast - perPage;
        const current = cards.slice(indexFirst,indexLast);
        const renderController = current.map((item,i)=>{
            item.index = i;
            return (<CardItem obj={item} key ={i}/>);
        })
        const pageNumber = [];
        for(let i=1;i<=Math.ceil(cards.length/perPage);i++){
            pageNumber.push(i);
        }
        const renderPageNumbers= pageNumber.map(number=>{
            return (
                <li class="waves-effect" style={{width:"35px",height:"35px",fontSize:"20px", textAlign:"center",cursor:"pointer",backgroundColor: this.state.currentPage === number? "pink":"white"}}
                key ={number}
                id= {number}
                onClick = {this.pageClick}
                >
                    {number}
                </li>
            );
        });
         return (
            <div>
                
                <div style ={{width :"100%",height:"575px"}}>
                    {renderController}
                </div>
                <div style={{clear:"left"}}><br/></div>
                <ul id ="page-numbers" style ={{display:"inline-flex"}}>
                <li class="waves-effect" onClick ={e=>this.uporDown(false)} style={{width:"35px",height:"35px"}}><i class="material-icons">chevron_left</i></li>
                    {renderPageNumbers}
                <li class="waves-effect" onClick={e=>this.uporDown(true)} style={{width:"35px",height:"35px"}} ><i class="material-icons">chevron_right</i></li>
                </ul>

            </div>

        );
          }